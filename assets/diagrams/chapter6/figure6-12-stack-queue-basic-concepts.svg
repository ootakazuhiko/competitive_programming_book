<svg viewBox="0 0 800 720" xmlns="http://www.w3.org/2000/svg">
  <title>図6-12：スタックとキューの基本概念</title>
  <desc>スタック（LIFO）とキュー（FIFO）の基本概念と実世界での例を視覚的に説明する図</desc>
  
  <defs>
    <style>
      .title { font: 600 16px Inter, sans-serif; fill: #1F2937; }
      .section-title { font: 600 14px Inter, sans-serif; fill: #374151; }
      .concept-title { font: 600 12px Inter, sans-serif; }
      .description-text { font: 500 11px Inter, sans-serif; fill: #4B5563; }
      .feature-text { font: 500 10px Inter, sans-serif; fill: #6B7280; }
      .operation-text { font: 600 10px Inter, sans-serif; }
      .emoji { font: 400 16px Inter, sans-serif; }
      
      .stack-section { fill: #FEF3C7; stroke: #F59E0B; stroke-width: 2; }
      .queue-section { fill: #DBEAFE; stroke: #3B82F6; stroke-width: 2; }
      .stack-item { fill: #FED7AA; stroke: #EA580C; stroke-width: 2; }
      .queue-item { fill: #BAE6FD; stroke: #0284C7; stroke-width: 2; }
      .arrow { stroke: #059669; stroke-width: 3; fill: none; }
      .concept-box { fill: #F9FAFB; stroke: #D1D5DB; stroke-width: 1; }
    </style>
    
    <marker id="arrow" markerWidth="12" markerHeight="12" refX="10" refY="3" orient="auto">
      <path d="M0,0 L0,6 L12,3 z" fill="#059669"/>
    </marker>
  </defs>
  
  <!-- Background -->
  <rect width="800" height="720" fill="#FFFFFF"/>
  
  <!-- Title -->
  <text x="400" y="32" text-anchor="middle" class="title">図6-12：スタックとキューの基本概念</text>
  
  <!-- Stack Section -->
  <g id="stack-section">
    <rect x="50" y="60" width="700" height="300" rx="12" class="stack-section"/>
    <text x="70" y="85" class="emoji">📚</text>
    <text x="100" y="85" class="concept-title" fill="#D97706">スタック（Stack）：後入れ先出し（LIFO: Last In, First Out）</text>
    
    <!-- Real world example -->
    <g transform="translate(70, 100)">
      <text x="0" y="15" class="description-text">実世界の例：積み重ねた本、皿の積み重ね</text>
      
      <!-- Stack visualization -->
      <g transform="translate(50, 40)">
        <!-- Push arrow -->
        <path d="M50 -10 L50 10" class="arrow" marker-end="url(#arrow)"/>
        <text x="55" y="5" class="operation-text" fill="#059669">push（追加）</text>
        
        <!-- Stack items -->
        <g id="stack-items">
          <rect x="20" y="20" width="80" height="30" rx="4" class="stack-item"/>
          <text x="60" y="40" text-anchor="middle" style="font: 600 11px Inter, sans-serif; fill: #9A3412;">本3</text>
          <text x="110" y="30" class="feature-text">← 最後に置いた本が一番上</text>
          
          <rect x="20" y="55" width="80" height="30" rx="4" class="stack-item"/>
          <text x="60" y="75" text-anchor="middle" style="font: 600 11px Inter, sans-serif; fill: #9A3412;">本2</text>
          
          <rect x="20" y="90" width="80" height="30" rx="4" class="stack-item"/>
          <text x="60" y="110" text-anchor="middle" style="font: 600 11px Inter, sans-serif; fill: #9A3412;">本1</text>
        </g>
        
        <!-- Pop arrow -->
        <path d="M50 140 L50 160" class="arrow" marker-end="url(#arrow)"/>
        <text x="55" y="155" class="operation-text" fill="#059669">pop（取り出し）</text>
      </g>
      
      <!-- Stack characteristics -->
      <g transform="translate(300, 40)">
        <rect x="0" y="0" width="370" height="120" class="concept-box"/>
        <text x="10" y="20" style="font: 600 12px Inter, sans-serif; fill: #D97706;">特徴:</text>
        
        <g transform="translate(10, 35)">
          <circle cx="8" cy="8" r="4" fill="#F59E0B"/>
          <text x="20" y="12" class="feature-text">最後に入れたものが最初に出てくる</text>
        </g>
        
        <g transform="translate(10, 55)">
          <circle cx="8" cy="8" r="4" fill="#F59E0B"/>
          <text x="20" y="12" class="feature-text">一番上の要素のみアクセス可能</text>
        </g>
        
        <g transform="translate(10, 75)">
          <circle cx="8" cy="8" r="4" fill="#F59E0B"/>
          <text x="20" y="12" class="feature-text">push（追加）とpop（取り出し）の2つの操作</text>
        </g>
        
        <g transform="translate(10, 95)">
          <circle cx="8" cy="8" r="4" fill="#F59E0B"/>
          <text x="20" y="12" class="feature-text">用途：関数呼び出し、括弧の対応チェック、履歴管理</text>
        </g>
      </g>
    </g>
  </g>
  
  <!-- Queue Section -->
  <g id="queue-section">
    <rect x="50" y="380" width="700" height="300" rx="12" class="queue-section"/>
    <text x="70" y="405" class="emoji">🚶</text>
    <text x="100" y="405" class="concept-title" fill="#1E40AF">キュー（Queue）：先入れ先出し（FIFO: First In, First Out）</text>
    
    <!-- Real world example -->
    <g transform="translate(70, 420)">
      <text x="0" y="15" class="description-text">実世界の例：行列、パイプの中の水</text>
      
      <!-- Queue visualization -->
      <g transform="translate(50, 40)">
        <!-- Enqueue -->
        <text x="0" y="45" class="operation-text" fill="#059669">enqueue</text>
        <text x="0" y="60" class="feature-text">（後ろに並ぶ）</text>
        <path d="M70 50 L90 50" class="arrow" marker-end="url(#arrow)"/>
        
        <!-- Queue items -->
        <g id="queue-items">
          <rect x="100" y="35" width="60" height="30" rx="4" class="queue-item"/>
          <text x="130" y="55" text-anchor="middle" style="font: 600 11px Inter, sans-serif; fill: #1E40AF;">人1</text>
          
          <rect x="170" y="35" width="60" height="30" rx="4" class="queue-item"/>
          <text x="200" y="55" text-anchor="middle" style="font: 600 11px Inter, sans-serif; fill: #1E40AF;">人2</text>
          
          <rect x="240" y="35" width="60" height="30" rx="4" class="queue-item"/>
          <text x="270" y="55" text-anchor="middle" style="font: 600 11px Inter, sans-serif; fill: #1E40AF;">人3</text>
        </g>
        
        <!-- Dequeue -->
        <path d="M310 50 L330 50" class="arrow" marker-end="url(#arrow)"/>
        <text x="340" y="45" class="operation-text" fill="#059669">dequeue</text>
        <text x="340" y="60" class="feature-text">（前から出る）</text>
      </g>
      
      <!-- Queue characteristics -->
      <g transform="translate(50, 100)">
        <rect x="0" y="0" width="620" height="140" class="concept-box"/>
        <text x="10" y="20" style="font: 600 12px Inter, sans-serif; fill: #1E40AF;">特徴:</text>
        
        <g transform="translate(10, 35)">
          <circle cx="8" cy="8" r="4" fill="#3B82F6"/>
          <text x="20" y="12" class="feature-text">最初に入れたものが最初に出てくる</text>
        </g>
        
        <g transform="translate(10, 55)">
          <circle cx="8" cy="8" r="4" fill="#3B82F6"/>
          <text x="20" y="12" class="feature-text">前と後ろの両端からアクセス</text>
        </g>
        
        <g transform="translate(10, 75)">
          <circle cx="8" cy="8" r="4" fill="#3B82F6"/>
          <text x="20" y="12" class="feature-text">enqueue（追加）とdequeue（取り出し）の操作</text>
        </g>
        
        <g transform="translate(10, 95)">
          <circle cx="8" cy="8" r="4" fill="#3B82F6"/>
          <text x="20" y="12" class="feature-text">用途：幅優先探索（BFS）、タスクスケジューリング、バッファ処理</text>
        </g>
        
        <g transform="translate(10, 115)">
          <circle cx="8" cy="8" r="4" fill="#3B82F6"/>
          <text x="20" y="12" class="feature-text">公平性：先に来たものから順番に処理される</text>
        </g>
      </g>
    </g>
  </g>
  
  <!-- Comparison Summary -->
  <g id="comparison-summary">
    <rect x="50" y="700" width="700" height="1" fill="none"/>
    <g transform="translate(400, 705)">
      <text x="0" y="0" text-anchor="middle" style="font: 600 12px Inter, sans-serif; fill: #6B7280;">
        💡 覚え方：スタック = 「積む」、キュー = 「列に並ぶ」
      </text>
    </g>
  </g>
  
</svg>