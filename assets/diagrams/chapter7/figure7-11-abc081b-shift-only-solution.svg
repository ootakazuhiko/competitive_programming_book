<svg viewBox="0 0 900 1000" xmlns="http://www.w3.org/2000/svg" style="font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;">
  <defs>
    <style>
      .header { font-size: 16px; font-weight: 600; fill: var(--text-primary, #1a1a1a); }
      .category-title { font-size: 14px; font-weight: 600; fill: var(--text-primary, #1a1a1a); }
      .item-text { font-size: 12px; fill: var(--text-secondary, #4a4a4a); }
      .code-text { font-size: 11px; fill: var(--text-tertiary, #666666); font-family: 'Monaco', 'Consolas', monospace; }
      .highlight-text { font-size: 11px; fill: var(--success-text, #059669); font-weight: 500; }
      .step-text { font-size: 10px; fill: var(--text-tertiary, #666666); }
      .box { fill: var(--bg-primary, #ffffff); stroke: var(--border-primary, #d1d5db); stroke-width: 1.5; }
      .header-box { fill: var(--bg-accent, #f3f4f6); stroke: var(--border-primary, #d1d5db); stroke-width: 1.5; }
      .problem-box { fill: var(--bg-info, #e8f5ff); stroke: var(--border-info, #3b82f6); stroke-width: 1.5; }
      .analysis-box { fill: var(--bg-warning, #fffaf0); stroke: var(--border-warning, #f59e0b); stroke-width: 1.5; }
      .solution1-box { fill: var(--bg-success, #f0f9f5); stroke: var(--border-success, #10b981); stroke-width: 1.5; }
      .solution2-box { fill: var(--bg-purple, #f3e8ff); stroke: var(--border-purple, #8b5cf6); stroke-width: 1.5; }
      .verification-box { fill: var(--bg-secondary, #f8fafc); stroke: var(--border-secondary, #94a3b8); stroke-width: 1.5; }
    </style>
  </defs>

  <!-- Title -->
  <rect x="20" y="20" width="860" height="40" class="header-box" rx="8"/>
  <text x="450" y="44" text-anchor="middle" class="header">📋 ABC081 B問題「Shift only」完全解法</text>

  <!-- Problem Statement -->
  <rect x="40" y="80" width="820" height="140" class="problem-box" rx="8"/>
  <text x="60" y="104" class="category-title">📋 問題文</text>
  
  <text x="80" y="128" class="item-text">黒板にN個の正の整数A1, A2, ..., ANが書かれています。</text>
  <text x="80" y="148" class="item-text">すべてが偶数である間、次の操作を繰り返します：</text>
  <text x="100" y="168" class="item-text">• すべての数を2で割る</text>
  <text x="80" y="188" class="item-text">何回操作を行うことができるでしょうか？</text>
  
  <text x="500" y="128" class="item-text">入力例: 3</text>
  <text x="500" y="148" class="item-text">       8 12 40</text>
  <text x="500" y="168" class="item-text">出力例: 2</text>

  <!-- Problem Analysis -->
  <rect x="40" y="240" width="820" height="160" class="analysis-box" rx="8"/>
  <text x="60" y="264" class="category-title">🔍 問題分析</text>
  
  <text x="80" y="288" class="item-text">理解したこと：</text>
  <text x="100" y="308" class="item-text">• N個の数値が与えられる</text>
  <text x="100" y="328" class="item-text">• 全ての数が偶数の間、全てを2で割り続ける</text>
  <text x="100" y="348" class="item-text">• 操作回数を求める</text>
  
  <text x="480" y="288" class="item-text">サンプルトレース：</text>
  <text x="500" y="308" class="step-text">初期：[8, 12, 40]</text>
  <text x="500" y="328" class="step-text">1回目：[4, 6, 20] （全て偶数）</text>
  <text x="500" y="348" class="step-text">2回目：[2, 3, 10] （3が奇数なので終了）</text>
  <text x="500" y="368" class="highlight-text">答え：2回</text>

  <!-- Solution 1: Simulation -->
  <rect x="40" y="420" width="820" height="240" class="solution1-box" rx="8"/>
  <text x="60" y="444" class="category-title">💡 解法1: シミュレーション（分かりやすい）</text>
  
  <rect x="60" y="460" width="380" height="180" class="box" rx="4"/>
  <text x="80" y="480" class="code-text">n = int(input())</text>
  <text x="80" y="500" class="code-text">numbers = list(map(int, input().split()))</text>
  <text x="80" y="520" class="code-text"></text>
  <text x="80" y="540" class="code-text">count = 0</text>
  <text x="80" y="560" class="code-text">while True:</text>
  <text x="100" y="580" class="code-text"># 全ての数が偶数かチェック</text>
  <text x="100" y="600" class="code-text">all_even = all(num % 2 == 0 for num in numbers)</text>
  <text x="100" y="620" class="code-text">if not all_even: break</text>
  <text x="100" y="640" class="code-text"># 全ての数を2で割る</text>

  <text x="460" y="480" class="item-text">💡 このアプローチの利点：</text>
  <text x="480" y="500" class="item-text">• 問題文の通りに素直に実装</text>
  <text x="480" y="520" class="item-text">• 動作が分かりやすい</text>
  <text x="480" y="540" class="item-text">• デバッグしやすい</text>
  <text x="480" y="580" class="item-text">🎯 B問題レベルには十分</text>
  <text x="480" y="600" class="item-text">制約: N≤20, Ai≤1000なら</text>
  <text x="480" y="620" class="item-text">この解法で問題なし</text>

  <!-- Solution 2: Mathematical -->
  <rect x="40" y="680" width="820" height="240" class="solution2-box" rx="8"/>
  <text x="60" y="704" class="category-title">💡 解法2: 数学的解法（効率的）</text>
  
  <rect x="60" y="720" width="380" height="180" class="box" rx="4"/>
  <text x="80" y="740" class="code-text">n = int(input())</text>
  <text x="80" y="760" class="code-text">numbers = list(map(int, input().split()))</text>
  <text x="80" y="780" class="code-text"></text>
  <text x="80" y="800" class="code-text">def count_factor_of_2(num):</text>
  <text x="100" y="820" class="code-text">count = 0</text>
  <text x="100" y="840" class="code-text">while num % 2 == 0:</text>
  <text x="120" y="860" class="code-text">num //= 2</text>
  <text x="120" y="880" class="code-text">count += 1</text>

  <text x="460" y="740" class="item-text">🧮 数学的洞察：</text>
  <text x="480" y="760" class="item-text">• 各数の2の因数の個数を求める</text>
  <text x="480" y="780" class="item-text">• 最小値が答え（制限要因）</text>
  <text x="480" y="820" class="item-text">例: [8, 12, 40]</text>
  <text x="480" y="840" class="step-text">8 = 2³ → 3個</text>
  <text x="480" y="860" class="step-text">12 = 2² × 3 → 2個</text>
  <text x="480" y="880" class="step-text">40 = 2³ × 5 → 3個</text>
  <text x="480" y="900" class="highlight-text">min(3,2,3) = 2回</text>

  <!-- Verification -->
  <rect x="40" y="940" width="820" height="40" class="verification-box" rx="8"/>
  <text x="60" y="964" class="category-title">🧪 どちらも正解だが、制約に応じて選択</text>
  <text x="450" y="964" class="highlight-text">B問題では解法1で十分。解法2は応用力向上に役立つ</text>
</svg>