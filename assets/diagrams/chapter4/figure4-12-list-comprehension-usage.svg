<svg viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      :root {
        --primary-color: #2c3e50;
        --secondary-color: #3498db;
        --accent-color: #e74c3c;
        --success-color: #27ae60;
        --warning-color: #f39c12;
        --background-light: #ecf0f1;
        --text-dark: #2c3e50;
        --border-color: #bdc3c7;
      }
      
      .container { font-family: 'Inter', sans-serif; }
      .title { font-size: 18px; font-weight: 600; fill: var(--primary-color); }
      .subtitle { font-size: 14px; font-weight: 500; fill: var(--text-dark); }
      .text { font-size: 12px; fill: var(--text-dark); }
      .code { font-family: 'Consolas', 'Monaco', monospace; font-size: 11px; fill: var(--text-dark); }
      .verbose-box { fill: #fff5f5; stroke: var(--accent-color); stroke-width: 2; rx: 8; }
      .concise-box { fill: #f0fff0; stroke: var(--success-color); stroke-width: 2; rx: 8; }
      .advanced-box { fill: #f0f8ff; stroke: var(--secondary-color); stroke-width: 2; rx: 8; }
      .info-box { fill: #fff8f0; stroke: var(--warning-color); stroke-width: 2; rx: 8; }
    </style>
  </defs>
  
  <title>図4-12：リスト内包表記の活用</title>
  <desc>リスト内包表記を使用した効率的なコード記述方法を示した図</desc>
  
  <g class="container">
    <!-- Title -->
    <text x="400" y="30" text-anchor="middle" class="title">図4-12：リスト内包表記の活用</text>
    
    <!-- Subtitle -->
    <text x="400" y="55" text-anchor="middle" class="subtitle">基本形 → 内包表記への変換</text>
    
    <!-- Verbose way -->
    <rect x="50" y="80" width="700" height="100" class="verbose-box"/>
    <text x="70" y="105" class="subtitle">❌ 冗長な書き方：</text>
    <text x="70" y="130" class="code">n = int(input())</text>
    <text x="70" y="150" class="code">numbers = []</text>
    <text x="70" y="170" class="code">for i in range(n):</text>
    <text x="90" y="190" class="code">numbers.append(int(input()))</text>
    
    <!-- Concise way -->
    <rect x="50" y="200" width="700" height="80" class="concise-box"/>
    <text x="70" y="225" class="subtitle">✅ 内包表記（推奨）：</text>
    <text x="70" y="250" class="code">n = int(input())</text>
    <text x="70" y="270" class="code">numbers = [int(input()) for _ in range(n)]</text>
    
    <!-- Advanced examples -->
    <rect x="50" y="300" width="700" height="140" class="advanced-box"/>
    <text x="70" y="325" class="subtitle">さらなる応用例：</text>
    <text x="70" y="350" class="code"># 条件付きの読み込み</text>
    <text x="70" y="370" class="code">n = int(input())</text>
    <text x="70" y="390" class="code">positive_nums = [int(input()) for _ in range(n) if int(input()) > 0]</text>
    <text x="70" y="420" class="code"># 複数行の座標データ / points = [list(map(int, input().split())) for _ in range(n)]</text>
    
    <!-- Underscore explanation -->
    <rect x="50" y="460" width="700" height="120" class="info-box"/>
    <text x="70" y="485" class="subtitle">💡 "_"（アンダースコア）の意味：</text>
    <text x="90" y="510" class="text">• 変数名として"_"を使うのは「値を使わない」という慣習</text>
    <text x="90" y="530" class="text">• range(n)のカウンタは必要だが、実際の値は使わない場合</text>
    <text x="90" y="550" class="text">• "i"でも動作するが、"_"の方がPython的で推奨される</text>
    <text x="90" y="570" class="text">• より簡潔で読みやすいコードになる</text>
  </g>
</svg>