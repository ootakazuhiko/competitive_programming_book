<svg viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      :root {
        --primary-color: #2c3e50;
        --secondary-color: #3498db;
        --accent-color: #e74c3c;
        --success-color: #27ae60;
        --warning-color: #f39c12;
        --background-light: #ecf0f1;
        --text-dark: #2c3e50;
        --border-color: #bdc3c7;
      }
      
      .container { font-family: 'Inter', sans-serif; }
      .title { font-size: 18px; font-weight: 600; fill: var(--primary-color); }
      .subtitle { font-size: 14px; font-weight: 500; fill: var(--text-dark); }
      .text { font-size: 12px; fill: var(--text-dark); }
      .code { font-family: 'Consolas', 'Monaco', monospace; font-size: 11px; fill: var(--text-dark); }
      .good-box { fill: #f0fff0; stroke: var(--success-color); stroke-width: 2; rx: 8; }
      .bad-box { fill: #fff5f5; stroke: var(--accent-color); stroke-width: 2; rx: 8; }
      .guide-box { fill: #f0f8ff; stroke: var(--secondary-color); stroke-width: 2; rx: 8; }
      .icon { font-size: 14px; }
    </style>
  </defs>
  
  <title>図4-10：複数入力の使い分けガイド</title>
  <desc>複数入力を処理する際の適切な方法の選択指針を示した図</desc>
  
  <g class="container">
    <!-- Title -->
    <text x="400" y="30" text-anchor="middle" class="title">図4-10：複数入力の使い分けガイド</text>
    
    <!-- Individual variables (2-3 values) -->
    <rect x="50" y="60" width="700" height="140" class="good-box"/>
    <text x="70" y="85" class="subtitle icon">📝 2-3個の値 → 個別変数（推奨）</text>
    <text x="70" y="110" class="code"># 座標を読み込む場合</text>
    <text x="70" y="130" class="code">x, y = map(int, input().split())</text>
    <text x="70" y="150" class="code">print(f"点({x}, {y})")</text>
    <text x="400" y="110" class="code"># 範囲を読み込む場合</text>
    <text x="400" y="130" class="code">start, end = map(int, input().split())</text>
    <text x="400" y="150" class="code">for i in range(start, end + 1):</text>
    <text x="420" y="170" class="code">    print(i)</text>
    <text x="70" y="190" class="code"># 3つの値の場合 / a, b, c = map(int, input().split()) / print(max(a, b, c))</text>
    
    <!-- List (4+ values) -->
    <rect x="50" y="220" width="700" height="140" class="good-box"/>
    <text x="70" y="245" class="subtitle icon">📝 4個以上の値 → リスト（推奨）</text>
    <text x="70" y="270" class="code"># N個の点数を読み込む場合</text>
    <text x="70" y="290" class="code">n = int(input())</text>
    <text x="70" y="310" class="code">scores = list(map(int, input().split()))</text>
    <text x="70" y="330" class="code">print(f"平均: {sum(scores) / len(scores)}")</text>
    <text x="70" y="350" class="code">print(f"最高: {max(scores)}")</text>
    <text x="400" y="270" class="code"># 可変個数の場合</text>
    <text x="400" y="290" class="code">data = list(map(int, input().split()))</text>
    <text x="400" y="310" class="code">print(f"合計: {sum(data)}")</text>
    <text x="400" y="330" class="code">print(f"要素数: {len(data)}")</text>
    
    <!-- Anti-patterns -->
    <rect x="50" y="380" width="700" height="160" class="bad-box"/>
    <text x="70" y="405" class="subtitle icon">⚠️ 避けるべきパターン：</text>
    <text x="70" y="430" class="code"># 個数が分からないのに個別変数で受け取り</text>
    <text x="70" y="450" class="code">a, b, c, d, e = map(int, input().split())</text>
    <text x="70" y="470" class="code"># → 入力が3個しかないとエラーになる</text>
    <text x="70" y="500" class="code"># 2-3個なのにリストで受け取り</text>
    <text x="70" y="520" class="code">coords = list(map(int, input().split()))</text>
    <text x="70" y="540" class="code"># → x, y = map(int, input().split()) の方が簡潔</text>
    
    <text x="400" y="430" class="text">❌ 入力データ数と受け取り方法が不一致</text>
    <text x="400" y="450" class="text">❌ 可読性が悪い（意図が不明確）</text>
    <text x="400" y="470" class="text">❌ エラーが発生しやすい</text>
    <text x="400" y="500" class="text">❌ 不必要に複雑</text>
    <text x="400" y="520" class="text">❌ コードの意図が分かりにくい</text>
  </g>
</svg>