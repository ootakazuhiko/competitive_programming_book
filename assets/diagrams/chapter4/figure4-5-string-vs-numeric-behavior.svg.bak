<svg viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      :root {
        --primary-color: #2c3e50;
        --secondary-color: #3498db;
        --accent-color: #e74c3c;
        --success-color: #27ae60;
        --warning-color: #f39c12;
        --background-light: #ecf0f1;
        --text-dark: #2c3e50;
        --border-color: #bdc3c7;
      }
      
      .container { font-family: 'Inter', sans-serif; }
      .title { font-size: 18px; font-weight: 600; fill: var(--primary-color); }
      .subtitle { font-size: 14px; font-weight: 500; fill: var(--text-dark); }
      .text { font-size: 12px; fill: var(--text-dark); }
      .code { font-family: 'Consolas', 'Monaco', monospace; font-size: 11px; fill: var(--text-dark); }
      .warning-box { fill: #fff8e1; stroke: var(--warning-color); stroke-width: 2; rx: 8; }
      .success-box { fill: #f0fff0; stroke: var(--success-color); stroke-width: 2; rx: 8; }
      .error-text { fill: var(--accent-color); font-weight: 500; }
      .success-text { fill: var(--success-color); font-weight: 500; }
      .highlight-box { fill: #f8f9fa; stroke: var(--border-color); stroke-width: 1; rx: 4; }
    </style>
  </defs>
  
  <title>図4-5：文字列と数値の違いによる動作の差</title>
  <desc>int()変換の有無による文字列と数値の動作の違いを比較した図</desc>
  
  <g class="container">
    <!-- Title -->
    <text x="400" y="30" text-anchor="middle" class="title">図4-5：文字列と数値の違いによる動作の差</text>
    
    <!-- Without int() conversion -->
    <rect x="50" y="60" width="340" height="200" class="warning-box"/>
    <text x="220" y="85" text-anchor="middle" class="subtitle">int()変換なしの場合：</text>
    <text x="70" y="110" class="code">n = input()  # nは"42"（文字列）</text>
    <text x="70" y="130" class="code">print(n + n)  # "42" + "42" = "4242"（文字列結合）</text>
    <text x="70" y="150" class="code">print(n * 2)  # "42" * 2 = "4242"（文字列繰り返し）</text>
    <text x="70" y="170" class="code error-text">print(n > 5)  # エラー！文字列と数値は比較できない</text>
    <text x="70" y="195" class="text">❌ 予期しない動作やエラーが発生</text>
    <text x="70" y="215" class="text">文字列として処理されるため、数値演算にならない</text>
    <text x="70" y="235" class="text">比較演算子でTypeErrorが発生する可能性</text>
    
    <!-- With int() conversion -->
    <rect x="410" y="60" width="340" height="200" class="success-box"/>
    <text x="580" y="85" text-anchor="middle" class="subtitle">int()変換ありの場合：</text>
    <text x="430" y="110" class="code">n = int(input())  # nは42（整数）</text>
    <text x="430" y="130" class="code">print(n + n)  # 42 + 42 = 84（数値加算）</text>
    <text x="430" y="150" class="code">print(n * 2)  # 42 * 2 = 84（数値乗算）</text>
    <text x="430" y="170" class="code success-text">print(n > 5)  # 42 > 5 = True（数値比較）</text>
    <text x="430" y="195" class="text">✅ 期待通りの数値演算が実行される</text>
    <text x="430" y="215" class="text">整数として処理されるため、数学的演算が正しく動作</text>
    <text x="430" y="235" class="text">比較演算子も正常に機能する</text>
    
    <!-- Demonstration section -->
    <rect x="50" y="290" width="700" height="130" class="highlight-box"/>
    <text x="70" y="315" class="subtitle">実際の動作例：</text>
    <text x="70" y="340" class="code"># 入力: "42"</text>
    <text x="250" y="340" class="code"># 入力: "42"</text>
    <text x="70" y="360" class="code">str_n = input()          # "42"</text>
    <text x="250" y="360" class="code">int_n = int(input())     # 42</text>
    <text x="70" y="380" class="code">print(str_n + str_n)     # "4242"</text>
    <text x="250" y="380" class="code">print(int_n + int_n)     # 84</text>
    <text x="70" y="400" class="code">print(type(str_n))       # &lt;class 'str'&gt;</text>
    <text x="250" y="400" class="code">print(type(int_n))       # &lt;class 'int'&gt;</text>
    
    <!-- Key Points -->
    <rect x="50" y="450" width="700" height="120" class="highlight-box"/>
    <text x="70" y="475" class="subtitle">🎯 覚えるポイント：</text>
    <text x="90" y="495" class="text">• input()は必ず文字列を返す（数字を入力しても"42"のような文字列）</text>
    <text x="90" y="515" class="text">• 数値として計算したい場合は必ずint()またはfloat()で変換</text>
    <text x="90" y="535" class="text">• 文字列のままだと予期しない動作（文字列結合、繰り返し）になる</text>
    <text x="90" y="555" class="text">• 競技プログラミングでは数値演算が必要なことが多いため、適切な変換が重要</text>
  </g>
</svg>