<svg viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      :root {
        --primary-color: #2c3e50;
        --secondary-color: #3498db;
        --accent-color: #e74c3c;
        --success-color: #27ae60;
        --background-light: #ecf0f1;
        --text-dark: #2c3e50;
        --border-color: #bdc3c7;
      }
      
      .container { font-family: 'Inter', sans-serif; }
      .title { font-size: 18px; font-weight: 600; fill: var(--primary-color); }
      .subtitle { font-size: 14px; font-weight: 500; fill: var(--text-dark); }
      .text { font-size: 12px; fill: var(--text-dark); }
      .code { font-family: 'Consolas', 'Monaco', monospace; font-size: 11px; fill: var(--text-dark); }
      .step-box { fill: var(--background-light); stroke: var(--border-color); stroke-width: 2; rx: 8; }
      .arrow { stroke: var(--secondary-color); stroke-width: 2; fill: var(--secondary-color); }
      .input-box { fill: #fff5f5; stroke: var(--accent-color); stroke-width: 2; rx: 6; }
      .process-box { fill: #f0f8ff; stroke: var(--secondary-color); stroke-width: 2; rx: 6; }
      .output-box { fill: #f0fff0; stroke: var(--success-color); stroke-width: 2; rx: 6; }
      .code-box { fill: #f8f9fa; stroke: var(--border-color); stroke-width: 1; rx: 4; }
    </style>
  </defs>
  
  <title>図4-4：単一数値入力の内部処理フロー</title>
  <desc>Pythonにおける単一数値入力の内部処理の流れを段階的に示した図</desc>
  
  <g class="container">
    <!-- Title -->
    <text x="400" y="30" text-anchor="middle" class="title">図4-4：単一数値入力の内部処理フロー</text>
    
    <!-- Step 1: Standard Input -->
    <rect x="100" y="60" width="200" height="50" class="input-box"/>
    <text x="200" y="80" text-anchor="middle" class="subtitle">標準入力</text>
    <text x="200" y="95" text-anchor="middle" class="code">"42\n"</text>
    <text x="320" y="85" class="text">← \nは改行文字（見えない）</text>
    
    <!-- Arrow 1 -->
    <path d="M200 120 L200 140" class="arrow" marker-end="url(#arrowhead)"/>
    
    <!-- Step 2: input() function -->
    <rect x="100" y="150" width="200" height="50" class="process-box"/>
    <text x="200" y="170" text-anchor="middle" class="subtitle">input()関数</text>
    <text x="200" y="185" text-anchor="middle" class="code">"42"</text>
    <text x="320" y="175" class="text">← 文字列として取得（改行は除去）</text>
    
    <!-- Arrow 2 -->
    <path d="M200 210 L200 230" class="arrow" marker-end="url(#arrowhead)"/>
    
    <!-- Step 3: int() function -->
    <rect x="100" y="240" width="200" height="50" class="process-box"/>
    <text x="200" y="260" text-anchor="middle" class="subtitle">int()関数</text>
    <text x="200" y="275" text-anchor="middle" class="code">42</text>
    <text x="320" y="265" class="text">← 整数として変換</text>
    
    <!-- Arrow 3 -->
    <path d="M200 300 L200 320" class="arrow" marker-end="url(#arrowhead)"/>
    
    <!-- Step 4: Variable assignment -->
    <rect x="100" y="330" width="200" height="50" class="output-box"/>
    <text x="200" y="350" text-anchor="middle" class="subtitle">変数に格納</text>
    <text x="200" y="365" text-anchor="middle" class="code">n = 42</text>
    
    <!-- Code example box -->
    <rect x="450" y="80" width="300" height="280" class="code-box"/>
    <text x="470" y="100" class="subtitle">コード例：</text>
    <text x="470" y="120" class="code"># 入力例：42</text>
    <text x="470" y="140" class="code">n = int(input())</text>
    <text x="470" y="165" class="code">内部で起こっていること：</text>
    <text x="470" y="185" class="code">1. input() → "42" を返す（文字列）</text>
    <text x="470" y="205" class="code">2. int("42") → 42 を返す（整数）</text>
    <text x="470" y="225" class="code">3. n = 42 が確定</text>
    <text x="470" y="250" class="code">print(n)      # 42 が出力される</text>
    <text x="470" y="270" class="code">print(n * 2)  # 84 が出力される</text>
    <text x="470" y="290" class="code">print(type(n)) # &lt;class 'int'&gt; が出力される</text>
    
    <!-- Key Points -->
    <rect x="100" y="420" width="600" height="120" class="step-box"/>
    <text x="120" y="445" class="subtitle">💡 重要なポイント：</text>
    <text x="140" y="465" class="text">• input()関数は必ず文字列を返す</text>
    <text x="140" y="485" class="text">• 数値として計算したい場合は必ずint()で変換が必要</text>
    <text x="140" y="505" class="text">• 変換後は整数として演算・比較が可能になる</text>
    <text x="140" y="525" class="text">• この処理パターンは競技プログラミングで最も基本的</text>
  </g>
  
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" 
            refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="var(--secondary-color)"/>
    </marker>
  </defs>
</svg>