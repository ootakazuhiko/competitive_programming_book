<svg viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg">
  <title>図4-3：標準入力・標準出力のデータフロー</title>
  <desc>競技プログラミングにおける標準入力から標準出力までのデータ処理フローを示す図</desc>
  
  <defs>
    <style>
      .title { font: 600 16px Inter, sans-serif; fill: var(--svg-text, #1F2937); }
      .component-title { font: 600 12px Inter, sans-serif; fill: var(--svg-text, #374151); }
      .data-text { font: 500 11px 'Monaco', monospace; fill: var(--svg-text, #4B5563); }
      .label-text { font: 500 10px Inter, sans-serif; fill: var(--svg-text, #6B7280); }
      .concept-text { font: 500 11px Inter, sans-serif; }
      .emoji { font: 400 16px Inter, sans-serif; }
      
      .input-box { fill: var(--svg-bg, #DBEAFE); stroke: var(--svg-primary, #3B82F6); stroke-width: 2; }
      .program-box { fill: var(--svg-bg, #F0FDF4); stroke: var(--svg-primary, #22C55E); stroke-width: 2; }
      .output-box { fill: var(--svg-bg, #FEF3C7); stroke: var(--svg-primary, #F59E0B); stroke-width: 2; }
      .data-box { fill: var(--svg-bg, #F8FAFC); stroke: var(--svg-primary, #CBD5E0); stroke-width: 1; }
      .concept-box { fill: var(--svg-bg, #F0F9FF); stroke: var(--svg-primary, #0369A1); stroke-width: 2; }
      
      .arrow { stroke: var(--svg-primary, #22C55E); stroke-width: 3; fill: none; }
      .flow-arrow { stroke: var(--svg-primary, #10B981); stroke-width: 2; fill: none; }
    </style>
    
    <marker id="arrow" markerWidth="12" markerHeight="12" refX="10" refY="3" orient="auto">
      <path d="M0,0 L0,6 L12,3 z" fill="var(--svg-primary, #22C55E)"/>
    </marker>
    
    <marker id="flow-arrow" markerWidth="10" markerHeight="10" refX="8" refY="3" orient="auto">
      <path d="M0,0 L0,6 L10,3 z" fill="var(--svg-primary, #10B981)"/>
    </marker>
  </defs>
  
  <!-- Background -->
  <rect width="800" height="600" fill="var(--svg-bg, #FFFFFF)"/>
  
  <!-- Title -->
  <text x="400" y="32" text-anchor="middle" class="title">図4-3：標準入力・標準出力のデータフロー</text>
  
  <!-- Main Flow Components -->
  <!-- Standard Input -->
  <g id="standard-input">
    <rect x="80" y="80" width="150" height="100" rx="12" class="input-box"/>
    <text x="155" y="105" text-anchor="middle" class="component-title" fill="#1E40AF">標準入力</text>
    <text x="155" y="120" text-anchor="middle" style="font: 500 11px Inter, sans-serif; fill: #1E40AF;">
      (Standard
    </text>
    <text x="155" y="135" text-anchor="middle" style="font: 500 11px Inter, sans-serif; fill: #1E40AF;">
      Input)
    </text>
    <text x="155" y="155" text-anchor="middle" style="font: 400 10px Inter, sans-serif; fill: #1E40AF;">
      input()関数で受取
    </text>
  </g>
  
  <!-- Arrow 1 -->
  <path d="M240 130 L320 130" class="arrow" marker-end="url(#arrow)"/>
  
  <!-- Your Program -->
  <g id="your-program">
    <rect x="330" y="80" width="150" height="100" rx="12" class="program-box"/>
    <text x="405" y="105" text-anchor="middle" class="component-title" fill="#047857">あなたの</text>
    <text x="405" y="120" text-anchor="middle" class="component-title" fill="#047857">プログラム</text>
    <text x="405" y="140" text-anchor="middle" style="font: 400 10px Inter, sans-serif; fill: #047857;">
      データ処理・計算
    </text>
    <text x="405" y="155" text-anchor="middle" style="font: 400 10px Inter, sans-serif; fill: #047857;">
      アルゴリズム実行
    </text>
  </g>
  
  <!-- Arrow 2 -->
  <path d="M490 130 L570 130" class="arrow" marker-end="url(#arrow)"/>
  
  <!-- Standard Output -->
  <g id="standard-output">
    <rect x="580" y="80" width="150" height="100" rx="12" class="output-box"/>
    <text x="655" y="105" text-anchor="middle" class="component-title" fill="#D97706">標準出力</text>
    <text x="655" y="120" text-anchor="middle" style="font: 500 11px Inter, sans-serif; fill: #D97706;">
      (Standard
    </text>
    <text x="655" y="135" text-anchor="middle" style="font: 500 11px Inter, sans-serif; fill: #D97706;">
      Output)
    </text>
    <text x="655" y="155" text-anchor="middle" style="font: 400 10px Inter, sans-serif; fill: #D97706;">
      print()関数で出力
    </text>
  </g>
  
  <!-- Data Flow Details -->
  <!-- Input Data Example -->
  <g id="input-data" transform="translate(80, 210)">
    <path d="M75 0 L75 -20" class="flow-arrow" marker-end="url(#flow-arrow)"/>
    <text x="75" y="-25" text-anchor="middle" class="label-text">
      問題文で指定された
    </text>
    <text x="75" y="-10" text-anchor="middle" class="label-text">
      入力データ
    </text>
    
    <rect x="0" y="10" width="150" height="80" rx="8" class="data-box"/>
    <text x="15" y="30" class="data-text">5</text>
    <text x="15" y="45" class="data-text">1 2 3 4 5</text>
    <text x="15" y="65" style="font: 400 10px Inter, sans-serif; fill: #6B7280;">
      ↑ 数値の個数
    </text>
    <text x="15" y="80" style="font: 400 10px Inter, sans-serif; fill: #6B7280;">
      ↑ 5つの数値データ
    </text>
  </g>
  
  <!-- Output Data Example -->
  <g id="output-data" transform="translate(580, 210)">
    <path d="M75 0 L75 -20" class="flow-arrow" marker-end="url(#flow-arrow)"/>
    <text x="75" y="-25" text-anchor="middle" class="label-text">
      問題文で指定された
    </text>
    <text x="75" y="-10" text-anchor="middle" class="label-text">
      期待される出力
    </text>
    
    <rect x="0" y="10" width="150" height="80" rx="8" class="data-box"/>
    <text x="15" y="35" class="data-text">15</text>
    <text x="15" y="55" style="font: 400 10px Inter, sans-serif; fill: #6B7280;">
      ↑ 合計値（1+2+3+4+5）
    </text>
    <text x="15" y="70" style="font: 400 10px Inter, sans-serif; fill: #6B7280;">
      正確にこの値を出力
    </text>
  </g>
  
  <!-- Processing Flow -->
  <g id="processing-flow" transform="translate(330, 210)">
    <rect x="0" y="10" width="150" height="80" rx="8" fill="var(--svg-bg, #DCFCE7)" stroke="var(--svg-primary, #22C55E)" stroke-width="1"/>
    <text x="10" y="25" style="font: 600 10px Inter, sans-serif; fill: #047857;">
      処理ステップ：
    </text>
    <text x="10" y="40" style="font: 500 9px Inter, sans-serif; fill: #047857;">
      1. 数値の個数を読み込み
    </text>
    <text x="10" y="52" style="font: 500 9px Inter, sans-serif; fill: #047857;">
      2. 5つの数値を読み込み
    </text>
    <text x="10" y="64" style="font: 500 9px Inter, sans-serif; fill: #047857;">
      3. 合計を計算
    </text>
    <text x="10" y="76" style="font: 500 9px Inter, sans-serif; fill: #047857;">
      4. 結果を出力
    </text>
  </g>
  
  <!-- Important Concepts -->
  <g id="concepts" transform="translate(100, 330)">
    <rect x="0" y="0" width="600" height="200" rx="12" class="concept-box"/>
    <text x="20" y="25" class="emoji">💡</text>
    <text x="50" y="25" style="font: 600 14px Inter, sans-serif; fill: #0369A1;">
      重要な概念
    </text>
    
    <g transform="translate(20, 40)">
      <g transform="translate(0, 15)">
        <circle cx="8" cy="8" r="4" fill="#0369A1"/>
        <text x="20" y="12" class="concept-text" fill="#0369A1">
          プログラムは入力を「待つ」状態になる
        </text>
      </g>
      
      <g transform="translate(0, 35)">
        <circle cx="8" cy="8" r="4" fill="#0369A1"/>
        <text x="20" y="12" class="concept-text" fill="#0369A1">
          input()関数が呼ばれるまで次の行に進まない
        </text>
      </g>
      
      <g transform="translate(0, 55)">
        <circle cx="8" cy="8" r="4" fill="#0369A1"/>
        <text x="20" y="12" class="concept-text" fill="#0369A1">
          入力は必ず文字列として受け取られる
        </text>
      </g>
      
      <g transform="translate(0, 75)">
        <circle cx="8" cy="8" r="4" fill="#0369A1"/>
        <text x="20" y="12" class="concept-text" fill="#0369A1">
          数値として使いたい場合はint()で変換が必要
        </text>
      </g>
      
      <rect x="0" y="100" width="560" height="60" rx="8" fill="#0369A1" fill-opacity="0.1"/>
      <text x="15" y="120" style="font: 600 12px Inter, sans-serif; fill: #0369A1;">
        🤖 AtCoderでの自動判定システム
      </text>
      <text x="15" y="135" style="font: 500 11px Inter, sans-serif; fill: #0369A1;">
        あなたのプログラムに問題文の入力例を与えて、期待される出力例と一致するかをチェック
      </text>
      <text x="15" y="150" style="font: 500 11px Inter, sans-serif; fill: #0369A1;">
        完全に一致しなければWA（Wrong Answer）判定となる
      </text>
    </g>
  </g>
  
</svg>