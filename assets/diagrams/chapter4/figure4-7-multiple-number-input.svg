<svg viewBox="0 0 800 650" xmlns="http://www.w3.org/2000/svg">
  <title>図4-7：複数数値入力の段階的処理</title>
  <desc>split()とmap()を組み合わせた複数数値入力の段階的処理過程を詳細に示す図</desc>
  
  <defs>
    <style>
      .title { font: 600 16px Inter, sans-serif; fill: #1F2937; }
      .step-title { font: 600 14px Inter, sans-serif; fill: #374151; }
      .code-text { font: 500 12px 'Monaco', 'Menlo', monospace; fill: #4B5563; }
      .data-text { font: 600 14px 'Monaco', 'Menlo', monospace; }
      .explanation-text { font: 500 11px Inter, sans-serif; fill: #6B7280; }
      .pattern-title { font: 600 12px Inter, sans-serif; }
      .emoji { font: 400 18px Inter, sans-serif; }
      
      .step-box { fill: #F0F9FF; stroke: #0EA5E9; stroke-width: 2; }
      .data-box { fill: #F8FAFC; stroke: #CBD5E0; stroke-width: 2; }
      .pattern-box { fill: #ECFDF5; stroke: #22C55E; stroke-width: 2; }
      .individual-box { fill: #FEF3C7; stroke: #F59E0B; stroke-width: 2; }
      .list-box { fill: #DBEAFE; stroke: #3B82F6; stroke-width: 2; }
      .arrow { stroke: #10B981; stroke-width: 3; fill: none; }
    </style>
    
    <marker id="arrow" markerWidth="12" markerHeight="12" refX="10" refY="3" orient="auto">
      <path d="M0,0 L0,6 L12,3 z" fill="#10B981"/>
    </marker>
  </defs>
  
  <!-- Background -->
  <rect width="800" height="650" fill="#FFFFFF"/>
  
  <!-- Title -->
  <text x="400" y="32" text-anchor="middle" class="title">図4-7：複数数値入力の段階的処理</text>
  
  <!-- Step 1: Input -->
  <g id="step1">
    <rect x="50" y="60" width="700" height="70" rx="12" class="step-box"/>
    <text x="70" y="85" class="emoji">📥</text>
    <text x="100" y="85" class="step-title" fill="#0C4A6E">ステップ1：標準入力</text>
    
    <rect x="120" y="95" width="120" height="25" rx="6" class="data-box"/>
    <text x="130" y="112" class="data-text" fill="#4B5563">"3 5 2\n"</text>
    <text x="260" y="107" class="explanation-text">← ユーザーが「3 5 2」と入力してEnter</text>
  </g>
  
  <!-- Arrow 1 -->
  <path d="M400 140 L400 160" class="arrow" marker-end="url(#arrow)"/>
  
  <!-- Step 2: input() -->
  <g id="step2">
    <rect x="50" y="170" width="700" height="70" rx="12" class="step-box"/>
    <text x="70" y="195" class="emoji">🔄</text>
    <text x="100" y="195" class="step-title" fill="#0C4A6E">ステップ2：input()による読み込み</text>
    
    <rect x="120" y="205" width="100" height="25" rx="6" class="data-box"/>
    <text x="130" y="222" class="data-text" fill="#4B5563">"3 5 2"</text>
    <text x="240" y="217" class="explanation-text">← 改行文字は自動で除去</text>
  </g>
  
  <!-- Arrow 2 -->
  <path d="M400 250 L400 270" class="arrow" marker-end="url(#arrow)"/>
  
  <!-- Step 3: split() -->
  <g id="step3">
    <rect x="50" y="280" width="700" height="70" rx="12" class="step-box"/>
    <text x="70" y="305" class="emoji">✂️</text>
    <text x="100" y="305" class="step-title" fill="#0C4A6E">ステップ3：.split()による分割</text>
    
    <rect x="120" y="315" width="180" height="25" rx="6" class="data-box"/>
    <text x="130" y="332" class="data-text" fill="#4B5563">["3", "5", "2"]</text>
    <text x="320" y="327" class="explanation-text">← 空白で分割、文字列のリスト</text>
  </g>
  
  <!-- Arrow 3 -->
  <path d="M400 360 L400 380" class="arrow" marker-end="url(#arrow)"/>
  
  <!-- Step 4: map(int, ...) -->
  <g id="step4">
    <rect x="50" y="390" width="700" height="70" rx="12" class="step-box"/>
    <text x="70" y="415" class="emoji">🔢</text>
    <text x="100" y="415" class="step-title" fill="#0C4A6E">ステップ4：map(int, ...)による変換</text>
    
    <rect x="120" y="425" width="150" height="25" rx="6" class="data-box"/>
    <text x="130" y="442" class="data-text" fill="#4B5563">&lt;map object&gt;</text>
    <text x="290" y="437" class="explanation-text">← 各要素をint()で変換するオブジェクト</text>
  </g>
  
  <!-- Arrow 4 -->
  <path d="M400 470 L400 490" class="arrow" marker-end="url(#arrow)"/>
  
  <!-- Step 5: Usage patterns -->
  <g id="step5">
    <rect x="50" y="500" width="700" height="120" rx="12" class="pattern-box"/>
    <text x="70" y="525" class="emoji">🎯</text>
    <text x="100" y="525" class="step-title" fill="#059669">ステップ5：使用方法による分岐</text>
    
    <!-- Pattern 1: Individual variables -->
    <g transform="translate(80, 540)">
      <rect x="0" y="0" width="280" height="60" rx="8" class="individual-box"/>
      <text x="10" y="20" class="pattern-title" fill="#D97706">パターン1：個別変数に代入</text>
      <text x="10" y="35" class="code-text">a, b, c = map(int, input().split())</text>
      <text x="10" y="50" class="explanation-text">結果：a=3, b=5, c=2（それぞれ整数）</text>
    </g>
    
    <!-- Pattern 2: List -->
    <g transform="translate(380, 540)">
      <rect x="0" y="0" width="300" height="60" rx="8" class="list-box"/>
      <text x="10" y="20" class="pattern-title" fill="#1E40AF">パターン2：リストとして取得</text>
      <text x="10" y="35" class="code-text">numbers = list(map(int, input().split()))</text>
      <text x="10" y="50" class="explanation-text">結果：numbers = [3, 5, 2]（整数のリスト）</text>
    </g>
  </g>
  
</svg>