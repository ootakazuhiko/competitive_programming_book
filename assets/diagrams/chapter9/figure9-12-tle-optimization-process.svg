<svg viewBox="0 0 800 900" xmlns="http://www.w3.org/2000/svg">
  <title>図9-12：実際のTLE解決プロセス</title>
  <desc>N個の数から2つ選んで積がKになるペアの個数問題での最適化プロセス</desc>
  
  <!-- Background -->
  <rect width="800" height="900" fill="#f8fafc"/>
  
  <!-- Title -->
  <text x="400" y="32" text-anchor="middle" font-family="Inter, Arial, sans-serif" font-size="22" font-weight="bold" fill="#1f2937">
    実際のTLE解決プロセス
  </text>
  
  <!-- Problem description -->
  <text x="400" y="56" text-anchor="middle" font-family="Inter, Arial, sans-serif" font-size="14" fill="#6b7280">
    🎯 例題：「N個の数から2つ選んで積がKになるペアの個数」
  </text>
  
  <!-- Slow Solution Section -->
  <g id="slow-solution">
    <!-- Main container -->
    <rect x="50" y="80" width="700" height="340" rx="12" fill="#fef2f2" stroke="#ef4444" stroke-width="2"/>
    
    <!-- Header -->
    <rect x="60" y="90" width="680" height="30" rx="8" fill="#fee2e2" stroke="#ef4444" stroke-width="1"/>
    <text x="80" y="108" font-family="Inter, Arial, sans-serif" font-size="16" font-weight="bold" fill="#dc2626">
      ❌ TLEするコード（O(N²)）：
    </text>
    
    <!-- Problem analysis -->
    <text x="80" y="140" font-family="Inter, Arial, sans-serif" font-size="13" font-weight="bold" fill="#dc2626">
      🚨 計算量の問題分析：
    </text>
    <text x="80" y="160" font-family="Inter, Arial, sans-serif" font-size="11" fill="#7f1d1d">
      N=100,000の場合：約50億回の計算（100,000 × 100,000 ÷ 2）
    </text>
    <text x="80" y="176" font-family="Inter, Arial, sans-serif" font-size="11" fill="#7f1d1d">
      制限時間2秒に対して、明らかに時間超過
    </text>
    
    <!-- Code block -->
    <rect x="80" y="190" width="640" height="160" rx="8" fill="#ffffff" stroke="#e5e7eb" stroke-width="1"/>
    <text x="90" y="210" font-family="Monaco, 'Courier New', monospace" font-size="12" fill="#374151">
      n, k = map(int, input().split())
    </text>
    <text x="90" y="226" font-family="Monaco, 'Courier New', monospace" font-size="12" fill="#374151">
      arr = list(map(int, input().split()))
    </text>
    <text x="90" y="242" font-family="Monaco, 'Courier New', monospace" font-size="12" fill="#374151">
    </text>
    <text x="90" y="258" font-family="Monaco, 'Courier New', monospace" font-size="12" fill="#374151">
      count = 0
    </text>
    <text x="90" y="274" font-family="Monaco, 'Courier New', monospace" font-size="12" fill="#dc2626">
      for i in range(n):
    </text>
    <text x="100" y="290" font-family="Monaco, 'Courier New', monospace" font-size="12" fill="#dc2626">
      for j in range(i+1, n):
    </text>
    <text x="110" y="306" font-family="Monaco, 'Courier New', monospace" font-size="12" fill="#dc2626">
      if arr[i] * arr[j] == k:
    </text>
    <text x="120" y="322" font-family="Monaco, 'Courier New', monospace" font-size="12" fill="#dc2626">
      count += 1
    </text>
    <text x="90" y="338" font-family="Monaco, 'Courier New', monospace" font-size="12" fill="#374151">
      print(count)
    </text>
    
    <!-- Performance analysis -->
    <rect x="80" y="360" width="640" height="50" rx="6" fill="#fecaca" stroke="#ef4444" stroke-width="1"/>
    <text x="90" y="378" font-family="Inter, Arial, sans-serif" font-size="12" font-weight="bold" fill="#dc2626">
      ⏰ パフォーマンス分析：
    </text>
    <text x="90" y="394" font-family="Inter, Arial, sans-serif" font-size="11" fill="#7f1d1d">
      • 二重ループによるO(N²)の時間計算量
    </text>
    <text x="90" y="408" font-family="Inter, Arial, sans-serif" font-size="11" fill="#7f1d1d">
      • 全ペアを総当たりで確認（非効率）
    </text>
  </g>
  
  <!-- Optimization Process -->
  <g id="optimization-arrow">
    <!-- Arrow -->
    <path d="M400 430 L400 460" stroke="#f59e0b" stroke-width="4" fill="none" marker-end="url(#arrowhead-orange)"/>
    <text x="400" y="448" text-anchor="middle" font-family="Inter, Arial, sans-serif" font-size="12" font-weight="bold" fill="#d97706">
      🔄 最適化プロセス
    </text>
  </g>
  
  <!-- Fast Solution Section -->
  <g id="fast-solution">
    <!-- Main container -->
    <rect x="50" y="470" width="700" height="400" rx="12" fill="#f0fdf4" stroke="#22c55e" stroke-width="2"/>
    
    <!-- Header -->
    <rect x="60" y="480" width="680" height="30" rx="8" fill="#dcfce7" stroke="#22c55e" stroke-width="1"/>
    <text x="80" y="498" font-family="Inter, Arial, sans-serif" font-size="16" font-weight="bold" fill="#16a34a">
      ✅ 高速化されたコード（O(N)）：
    </text>
    
    <!-- Strategy explanation -->
    <text x="80" y="530" font-family="Inter, Arial, sans-serif" font-size="13" font-weight="bold" fill="#16a34a">
      🧠 最適化の戦略：
    </text>
    <text x="80" y="550" font-family="Inter, Arial, sans-serif" font-size="11" fill="#166534">
      1. Counterで各数値の出現回数を事前計算（O(N)）
    </text>
    <text x="80" y="566" font-family="Inter, Arial, sans-serif" font-size="11" fill="#166534">
      2. 各数値numに対して、k ÷ num = partnerを計算
    </text>
    <text x="80" y="582" font-family="Inter, Arial, sans-serif" font-size="11" fill="#166534">
      3. partnerが存在するかを辞書でO(1)で確認
    </text>
    <text x="80" y="598" font-family="Inter, Arial, sans-serif" font-size="11" fill="#166534">
      4. 同じ数同士と異なる数のペアを分けて計算
    </text>
    
    <!-- Code block -->
    <rect x="80" y="610" width="640" height="200" rx="8" fill="#ffffff" stroke="#e5e7eb" stroke-width="1"/>
    <text x="90" y="630" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#16a34a">
      from collections import Counter
    </text>
    <text x="90" y="644" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      n, k = map(int, input().split())
    </text>
    <text x="90" y="658" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      arr = list(map(int, input().split()))
    </text>
    <text x="90" y="672" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
    </text>
    <text x="90" y="686" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#16a34a">
      counter = Counter(arr)
    </text>
    <text x="300" y="686" font-family="Inter, Arial, sans-serif" font-size="9" fill="#16a34a">
      # O(N)で前処理
    </text>
    <text x="90" y="700" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      count = 0
    </text>
    <text x="90" y="714" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
    </text>
    <text x="90" y="728" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#16a34a">
      for num in counter:
    </text>
    <text x="100" y="742" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#16a34a">
      if k % num == 0:
    </text>
    <text x="290" y="742" font-family="Inter, Arial, sans-serif" font-size="9" fill="#16a34a">
      # numで割り切れる場合
    </text>
    <text x="110" y="756" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#16a34a">
      partner = k // num
    </text>
    <text x="110" y="770" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#16a34a">
      if partner in counter:
    </text>
    <text x="120" y="784" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#16a34a">
      if num == partner:
    </text>
    <text x="340" y="784" font-family="Inter, Arial, sans-serif" font-size="9" fill="#16a34a">
      # 同じ数同士のペア
    </text>
    <text x="130" y="798" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#16a34a">
      count += counter[num] * (counter[num] - 1) // 2
    </text>
    
    <!-- Performance improvement -->
    <rect x="80" y="820" width="640" height="40" rx="6" fill="#dcfce7" stroke="#22c55e" stroke-width="1"/>
    <text x="90" y="838" font-family="Inter, Arial, sans-serif" font-size="12" font-weight="bold" fill="#16a34a">
      🚀 パフォーマンス改善：
    </text>
    <text x="90" y="854" font-family="Inter, Arial, sans-serif" font-size="11" fill="#166534">
      • O(N²) → O(N)：50億回 → 10万回の計算に大幅削減
    </text>
  </g>
  
  <!-- Summary -->
  <rect x="50" y="885" width="700" height="10" rx="4" fill="#f0f9ff" stroke="#0ea5e9" stroke-width="1"/>
  <!-- Summary content removed to fit viewBox -->
  
  <!-- Arrow marker definitions -->
  <defs>
    <marker id="arrowhead-orange" markerWidth="12" markerHeight="9" refX="11" refY="4.5" orient="auto">
      <polygon points="0 0, 12 4.5, 0 9" fill="#f59e0b"/>
    </marker>
  </defs>
</svg>