<svg viewBox="0 0 800 1000" xmlns="http://www.w3.org/2000/svg">
  <title>図9-7：期待される出力からの逆算検証</title>
  <desc>期待される出力から逆算してプログラムの正誤を検証する手法とプロセス</desc>
  
  <!-- Background -->
  <rect width="800" height="1000" fill="#f8fafc"/>
  
  <!-- Title -->
  <text x="400" y="32" text-anchor="middle" font-family="Inter, Arial, sans-serif" font-size="22" font-weight="bold" fill="#1f2937">
    期待される出力からの逆算検証
  </text>
  
  <!-- Concept Overview Section -->
  <g id="concept-overview">
    <rect x="50" y="60" width="700" height="120" rx="12" fill="#ecfdf5" stroke="#10b981" stroke-width="2"/>
    
    <!-- Header -->
    <rect x="60" y="70" width="680" height="30" rx="8" fill="#d1fae5" stroke="#10b981" stroke-width="1"/>
    <text x="80" y="88" font-family="Inter, Arial, sans-serif" font-size="16" font-weight="bold" fill="#047857">
      🎯 逆算検証とは
    </text>
    
    <!-- Content -->
    <text x="80" y="115" font-family="Inter, Arial, sans-serif" font-size="13" fill="#065f46">
      正しい答えから逆向きに考えて、プログラムが期待通りの処理をしているかを確認する手法
    </text>
    <text x="80" y="135" font-family="Inter, Arial, sans-serif" font-size="13" fill="#065f46">
      • 「この出力を得るために、プログラムはどんな処理をすべきか」を考える
    </text>
    <text x="80" y="155" font-family="Inter, Arial, sans-serif" font-size="13" fill="#065f46">
      • 実際の処理と期待される処理を比較して、論理エラーを発見する
    </text>
  </g>
  
  <!-- Example Problem Section -->
  <g id="example-problem">
    <rect x="50" y="200" width="700" height="180" rx="12" fill="#f0f9ff" stroke="#0ea5e9" stroke-width="2"/>
    
    <!-- Header -->
    <rect x="60" y="210" width="680" height="30" rx="8" fill="#e0f2fe" stroke="#0ea5e9" stroke-width="1"/>
    <text x="80" y="228" font-family="Inter, Arial, sans-serif" font-size="16" font-weight="bold" fill="#0284c7">
      📝 例題：配列の重複要素カウント
    </text>
    
    <!-- Problem statement -->
    <rect x="80" y="250" width="640" height="120" rx="8" fill="#ffffff" stroke="#e5e7eb" stroke-width="1"/>
    <text x="90" y="270" font-family="Inter, Arial, sans-serif" font-size="14" font-weight="bold" fill="#374151">
      問題：配列内で最も多く出現する要素とその回数を求める
    </text>
    
    <!-- Input/Output -->
    <rect x="100" y="285" width="280" height="75" rx="4" fill="#f8fafc" stroke="#d1d5db" stroke-width="1"/>
    <text x="110" y="301" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      入力: [1, 2, 2, 3, 2, 1, 3, 2]
    </text>
    <text x="110" y="315" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#dc2626">
      期待出力: 要素2が4回
    </text>
    <text x="110" y="329" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      # 2が最も多く出現（4回）
    </text>
    <text x="110" y="343" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      # 1は2回、3は2回出現
    </text>
    
    <!-- Wrong result -->
    <rect x="400" y="285" width="280" height="75" rx="4" fill="#fef2f2" stroke="#ef4444" stroke-width="1"/>
    <text x="410" y="301" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      実際の出力: 要素3が2回
    </text>
    <text x="410" y="315" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#dc2626">
      ❌ 間違った結果
    </text>
    <text x="410" y="329" font-family="Inter, Arial, sans-serif" font-size="11" fill="#dc2626">
      なぜ要素2（4回）ではなく
    </text>
    <text x="410" y="343" font-family="Inter, Arial, sans-serif" font-size="11" fill="#dc2626">
      要素3（2回）が選ばれた？
    </text>
  </g>
  
  <!-- Reverse Verification Process -->
  <g id="reverse-process">
    <rect x="50" y="400" width="700" height="340" rx="12" fill="#fef3c7" stroke="#f59e0b" stroke-width="2"/>
    
    <!-- Header -->
    <rect x="60" y="410" width="680" height="30" rx="8" fill="#fde68a" stroke="#f59e0b" stroke-width="1"/>
    <text x="80" y="428" font-family="Inter, Arial, sans-serif" font-size="16" font-weight="bold" fill="#d97706">
      🔄 逆算検証プロセス
    </text>
    
    <!-- Step 1 -->
    <g id="step1">
      <rect x="80" y="460" width="640" height="80" rx="8" fill="#ffffff" stroke="#e5e7eb" stroke-width="1"/>
      <text x="90" y="480" font-family="Inter, Arial, sans-serif" font-size="14" font-weight="bold" fill="#d97706">
        ステップ1：期待される動作を分析
      </text>
      <text x="100" y="500" font-family="Inter, Arial, sans-serif" font-size="12" fill="#92400e">
        • 配列 [1, 2, 2, 3, 2, 1, 3, 2] で要素2が4回出現 → 最大
      </text>
      <text x="100" y="515" font-family="Inter, Arial, sans-serif" font-size="12" fill="#92400e">
        • 正しいプログラムなら「要素2が4回」と出力するはず
      </text>
      <text x="100" y="530" font-family="Inter, Arial, sans-serif" font-size="12" fill="#92400e">
        • 実際は「要素3が2回」→ 何かがおかしい
      </text>
    </g>
    
    <!-- Step 2 -->
    <g id="step2">
      <rect x="80" y="560" width="640" height="80" rx="8" fill="#ffffff" stroke="#e5e7eb" stroke-width="1"/>
      <text x="90" y="580" font-family="Inter, Arial, sans-serif" font-size="14" font-weight="bold" fill="#d97706">
        ステップ2：実際の処理を追跡
      </text>
      <text x="100" y="600" font-family="Inter, Arial, sans-serif" font-size="12" fill="#92400e">
        • カウント処理：1→2回, 2→4回, 3→2回 ✅ カウント自体は正しい
      </text>
      <text x="100" y="615" font-family="Inter, Arial, sans-serif" font-size="12" fill="#92400e">
        • 最大値検索：なぜ4回の要素2ではなく、2回の要素3が選ばれた？
      </text>
      <text x="100" y="630" font-family="Inter, Arial, sans-serif" font-size="12" fill="#92400e">
        • → 最大値検索のロジックに問題がありそう
      </text>
    </g>
    
    <!-- Step 3 -->
    <g id="step3">
      <rect x="80" y="660" width="640" height="70" rx="8" fill="#ffffff" stroke="#e5e7eb" stroke-width="1"/>
      <text x="90" y="680" font-family="Inter, Arial, sans-serif" font-size="14" font-weight="bold" fill="#d97706">
        ステップ3：仮説を立てて検証
      </text>
      <text x="100" y="700" font-family="Inter, Arial, sans-serif" font-size="12" fill="#92400e">
        • 仮説：「最大値を更新する条件が間違っている」
      </text>
      <text x="100" y="715" font-family="Inter, Arial, sans-serif" font-size="12" fill="#92400e">
        • 実際のコードを確認 → 「>=」ではなく「>」を使うべきでは？
      </text>
    </g>
  </g>
  
  <!-- Code Analysis Section -->
  <g id="code-analysis">
    <rect x="50" y="760" width="700" height="220" rx="12" fill="#f3e8ff" stroke="#a855f7" stroke-width="2"/>
    
    <!-- Header -->
    <rect x="60" y="770" width="680" height="30" rx="8" fill="#e9d5ff" stroke="#a855f7" stroke-width="1"/>
    <text x="80" y="788" font-family="Inter, Arial, sans-serif" font-size="16" font-weight="bold" fill="#9333ea">
      🐛 バグの発見と修正
    </text>
    
    <!-- Buggy code -->
    <rect x="80" y="820" width="300" height="140" rx="8" fill="#fef2f2" stroke="#ef4444" stroke-width="1"/>
    <text x="90" y="840" font-family="Inter, Arial, sans-serif" font-size="14" font-weight="bold" fill="#dc2626">
      問題のあるコード：
    </text>
    <rect x="90" y="850" width="280" height="80" rx="4" fill="#ffffff" stroke="#e5e7eb" stroke-width="1"/>
    <text x="100" y="866" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      max_count = 0
    </text>
    <text x="100" y="880" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      max_element = None
    </text>
    <text x="100" y="894" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      for element, count in counter:
    </text>
    <text x="110" y="908" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#dc2626">
      if count >= max_count:
    </text>
    <text x="200" y="908" font-family="Inter, Arial, sans-serif" font-size="9" fill="#dc2626">
      # ⚠️ 問題
    </text>
    <text x="120" y="922" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      max_count = count
    </text>
    
    <!-- Analysis -->
    <text x="90" y="950" font-family="Inter, Arial, sans-serif" font-size="12" fill="#dc2626">
      🔍 問題：「>=」だと同じ回数の場合、</text>
    <text x="90" y="965" font-family="Inter, Arial, sans-serif" font-size="12" fill="#dc2626">
      後に出現した要素で上書きされる
    </text>
    
    <!-- Fixed code -->
    <rect x="420" y="820" width="300" height="140" rx="8" fill="#f0fdf4" stroke="#22c55e" stroke-width="1"/>
    <text x="430" y="840" font-family="Inter, Arial, sans-serif" font-size="14" font-weight="bold" fill="#16a34a">
      修正版：
    </text>
    <rect x="430" y="850" width="280" height="80" rx="4" fill="#ffffff" stroke="#e5e7eb" stroke-width="1"/>
    <text x="440" y="866" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      max_count = 0
    </text>
    <text x="440" y="880" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      max_element = None
    </text>
    <text x="440" y="894" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      for element, count in counter:
    </text>
    <text x="450" y="908" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#16a34a">
      if count > max_count:
    </text>
    <text x="540" y="908" font-family="Inter, Arial, sans-serif" font-size="9" fill="#16a34a">
      # ✅ 修正
    </text>
    <text x="460" y="922" font-family="Monaco, 'Courier New', monospace" font-size="11" fill="#374151">
      max_count = count
    </text>
    
    <!-- Solution -->
    <text x="430" y="950" font-family="Inter, Arial, sans-serif" font-size="12" fill="#16a34a">
      💡 解決：「>」にすることで、最初に見つけた</text>
    <text x="430" y="965" font-family="Inter, Arial, sans-serif" font-size="12" fill="#16a34a">
      最大値の要素を保持
    </text>
  </g>
  
  <!-- Key takeaway bar -->
  <rect x="50" y="990" width="700" height="5" rx="4" fill="#ecfdf5" stroke="#10b981" stroke-width="2"/>
</svg>